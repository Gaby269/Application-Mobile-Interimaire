// Generated by view binder compiler. Do not edit!
package com.example.tp1_premireapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tp1_premireapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCalendrierBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button accueilBouton;

  @NonNull
  public final Button buttonAdd;

  @NonNull
  public final CalendarView calendar;

  @NonNull
  public final ListView listEvents;

  @NonNull
  public final LinearLayout ll;

  @NonNull
  public final EditText textViewAdd;

  private ActivityCalendrierBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button accueilBouton, @NonNull Button buttonAdd, @NonNull CalendarView calendar,
      @NonNull ListView listEvents, @NonNull LinearLayout ll, @NonNull EditText textViewAdd) {
    this.rootView = rootView;
    this.accueilBouton = accueilBouton;
    this.buttonAdd = buttonAdd;
    this.calendar = calendar;
    this.listEvents = listEvents;
    this.ll = ll;
    this.textViewAdd = textViewAdd;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCalendrierBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCalendrierBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_calendrier, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCalendrierBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accueil_bouton;
      Button accueilBouton = ViewBindings.findChildViewById(rootView, id);
      if (accueilBouton == null) {
        break missingId;
      }

      id = R.id.button_add;
      Button buttonAdd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.calendar;
      CalendarView calendar = ViewBindings.findChildViewById(rootView, id);
      if (calendar == null) {
        break missingId;
      }

      id = R.id.list_events;
      ListView listEvents = ViewBindings.findChildViewById(rootView, id);
      if (listEvents == null) {
        break missingId;
      }

      id = R.id.ll;
      LinearLayout ll = ViewBindings.findChildViewById(rootView, id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.text_view_add;
      EditText textViewAdd = ViewBindings.findChildViewById(rootView, id);
      if (textViewAdd == null) {
        break missingId;
      }

      return new ActivityCalendrierBinding((ConstraintLayout) rootView, accueilBouton, buttonAdd,
          calendar, listEvents, ll, textViewAdd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
