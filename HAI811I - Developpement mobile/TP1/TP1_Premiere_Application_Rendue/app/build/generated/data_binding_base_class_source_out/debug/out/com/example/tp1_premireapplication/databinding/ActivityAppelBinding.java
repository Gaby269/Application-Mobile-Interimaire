// Generated by view binder compiler. Do not edit!
package com.example.tp1_premireapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tp1_premireapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAppelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button accueilBouton;

  @NonNull
  public final TextView affichageAppel;

  @NonNull
  public final ImageView affichageImage;

  @NonNull
  public final TextView affichageTel;

  @NonNull
  public final Button appelButton;

  private ActivityAppelBinding(@NonNull ConstraintLayout rootView, @NonNull Button accueilBouton,
      @NonNull TextView affichageAppel, @NonNull ImageView affichageImage,
      @NonNull TextView affichageTel, @NonNull Button appelButton) {
    this.rootView = rootView;
    this.accueilBouton = accueilBouton;
    this.affichageAppel = affichageAppel;
    this.affichageImage = affichageImage;
    this.affichageTel = affichageTel;
    this.appelButton = appelButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAppelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAppelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_appel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAppelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accueil_bouton;
      Button accueilBouton = ViewBindings.findChildViewById(rootView, id);
      if (accueilBouton == null) {
        break missingId;
      }

      id = R.id.affichageAppel;
      TextView affichageAppel = ViewBindings.findChildViewById(rootView, id);
      if (affichageAppel == null) {
        break missingId;
      }

      id = R.id.affichageImage;
      ImageView affichageImage = ViewBindings.findChildViewById(rootView, id);
      if (affichageImage == null) {
        break missingId;
      }

      id = R.id.affichageTel;
      TextView affichageTel = ViewBindings.findChildViewById(rootView, id);
      if (affichageTel == null) {
        break missingId;
      }

      id = R.id.appel_button;
      Button appelButton = ViewBindings.findChildViewById(rootView, id);
      if (appelButton == null) {
        break missingId;
      }

      return new ActivityAppelBinding((ConstraintLayout) rootView, accueilBouton, affichageAppel,
          affichageImage, affichageTel, appelButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
